== patronage

{<img src="https://travis-ci.org/codesy/patronage.png" />}[https://travis-ci.org/codesy/patronage]

{<img src="https://coveralls.io/repos/codesy/patronage/badge.png" alt="Coverage Status" />}[https://coveralls.io/r/codesy/patronage]

== Getting Started

1. Install dependencies

    $ sudo apt-get install libpq-dev (If installing a production environment)
    
    You will also need a javascript environment (like NodeJS) supported by execjs

2. Install rvm

    $ \curl -L https://get.rvm.io | bash -s stable --rails

3. Clone your fork

    $ git clone git@github.com:YOUR_USERNAME/patronage.git

4. Run bundler to install dependencies

    $ cd patronage
    $ bundle

5. Run db migrations for tests

    $ rake db:migrate db:test:prepare

6. Run tests

    $ rspec spec

7. Register your app with github at https://github.com/settings/applications/new

    Application name: patronage-dev
    Homepage URL: https://localhost:3000
    Authorization callback URL: https://localhost:3000/users/auth/github/callback

8. Generate a signing key with any passphrase

    $ openssl genrsa -des3 -out server.orig.key 2048

9. Convert the signing key to an RSA key, removing the passphrase

    $ openssl rsa -in server.orig.key -out server.key

10. Create the certificate request. Set "common name" to `localhost`:

    $ openssl req -new -key server.key -out server.csr

11. Create a self-signed certificate

    $ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

12. Create an executable script similar to the following:

    $ cat > bin/runserver << EOF
    #!/bin/bash
    export GITHUB_OAUTH_CLIENT_ID=your_oauth_client_id
    export GITHUB_OAUTH_CLIENT_SECRET=your_oauth_client_secret
    bundle exec thin start --ssl --ssl-verify --ssl-key-file server.key --ssl-cert-file server.crt
    EOF

    $ chmod 700 bin/runserver

13. Launch dev server

    $ bin/runserver

14. Sign in to your dev server with your github account

15. ???

16. Profit!
